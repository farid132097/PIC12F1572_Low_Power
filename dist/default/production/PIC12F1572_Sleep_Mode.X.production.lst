

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon May 08 01:33:02 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	12F1572
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC12F1572 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     0011                     	;# 
    61     0012                     	;# 
    62     0013                     	;# 
    63     0015                     	;# 
    64     0016                     	;# 
    65     0016                     	;# 
    66     0017                     	;# 
    67     0018                     	;# 
    68     0019                     	;# 
    69     001A                     	;# 
    70     001B                     	;# 
    71     001C                     	;# 
    72     008C                     	;# 
    73     0091                     	;# 
    74     0092                     	;# 
    75     0093                     	;# 
    76     0095                     	;# 
    77     0096                     	;# 
    78     0097                     	;# 
    79     0098                     	;# 
    80     0099                     	;# 
    81     009A                     	;# 
    82     009B                     	;# 
    83     009B                     	;# 
    84     009C                     	;# 
    85     009D                     	;# 
    86     009E                     	;# 
    87     009F                     	;# 
    88     010C                     	;# 
    89     0111                     	;# 
    90     0112                     	;# 
    91     0115                     	;# 
    92     0116                     	;# 
    93     0117                     	;# 
    94     0118                     	;# 
    95     0119                     	;# 
    96     011D                     	;# 
    97     011D                     	;# 
    98     018C                     	;# 
    99     0191                     	;# 
   100     0191                     	;# 
   101     0192                     	;# 
   102     0193                     	;# 
   103     0193                     	;# 
   104     0194                     	;# 
   105     0195                     	;# 
   106     0196                     	;# 
   107     0197                     	;# 
   108     0199                     	;# 
   109     019A                     	;# 
   110     019B                     	;# 
   111     019B                     	;# 
   112     019C                     	;# 
   113     019D                     	;# 
   114     019E                     	;# 
   115     019F                     	;# 
   116     020C                     	;# 
   117     028C                     	;# 
   118     030C                     	;# 
   119     038C                     	;# 
   120     0391                     	;# 
   121     0392                     	;# 
   122     0393                     	;# 
   123     0691                     	;# 
   124     0692                     	;# 
   125     0693                     	;# 
   126     0694                     	;# 
   127     0695                     	;# 
   128     0D8E                     	;# 
   129     0D8F                     	;# 
   130     0D90                     	;# 
   131     0D91                     	;# 
   132     0D91                     	;# 
   133     0D92                     	;# 
   134     0D93                     	;# 
   135     0D93                     	;# 
   136     0D94                     	;# 
   137     0D95                     	;# 
   138     0D95                     	;# 
   139     0D96                     	;# 
   140     0D97                     	;# 
   141     0D97                     	;# 
   142     0D98                     	;# 
   143     0D99                     	;# 
   144     0D99                     	;# 
   145     0D9A                     	;# 
   146     0D9B                     	;# 
   147     0D9C                     	;# 
   148     0D9C                     	;# 
   149     0D9D                     	;# 
   150     0D9D                     	;# 
   151     0D9E                     	;# 
   152     0D9F                     	;# 
   153     0DA0                     	;# 
   154     0DA1                     	;# 
   155     0DA1                     	;# 
   156     0DA2                     	;# 
   157     0DA3                     	;# 
   158     0DA3                     	;# 
   159     0DA4                     	;# 
   160     0DA5                     	;# 
   161     0DA5                     	;# 
   162     0DA6                     	;# 
   163     0DA7                     	;# 
   164     0DA7                     	;# 
   165     0DA8                     	;# 
   166     0DA9                     	;# 
   167     0DA9                     	;# 
   168     0DAA                     	;# 
   169     0DAB                     	;# 
   170     0DAC                     	;# 
   171     0DAC                     	;# 
   172     0DAD                     	;# 
   173     0DAD                     	;# 
   174     0DAE                     	;# 
   175     0DAF                     	;# 
   176     0DB0                     	;# 
   177     0DB1                     	;# 
   178     0DB1                     	;# 
   179     0DB2                     	;# 
   180     0DB3                     	;# 
   181     0DB3                     	;# 
   182     0DB4                     	;# 
   183     0DB5                     	;# 
   184     0DB5                     	;# 
   185     0DB6                     	;# 
   186     0DB7                     	;# 
   187     0DB7                     	;# 
   188     0DB8                     	;# 
   189     0DB9                     	;# 
   190     0DB9                     	;# 
   191     0DBA                     	;# 
   192     0DBB                     	;# 
   193     0DBC                     	;# 
   194     0DBC                     	;# 
   195     0DBD                     	;# 
   196     0DBD                     	;# 
   197     0DBE                     	;# 
   198     0DBF                     	;# 
   199     0DC0                     	;# 
   200     0FE4                     	;# 
   201     0FE5                     	;# 
   202     0FE6                     	;# 
   203     0FE7                     	;# 
   204     0FE8                     	;# 
   205     0FE8                     	;# 
   206     0FE9                     	;# 
   207     0FEA                     	;# 
   208     0FEA                     	;# 
   209     0FEB                     	;# 
   210     0FED                     	;# 
   211     0FEE                     	;# 
   212     0FEE                     	;# 
   213     0FEF                     	;# 
   214     000B                     _INTCON	set	11
   215     001A                     _TMR2	set	26
   216     001C                     _T2CON	set	28
   217     008C                     _TRISA	set	140
   218     0095                     _OPTION_REG	set	149
   219     009D                     _ADCON0	set	157
   220     010C                     _LATA	set	268
   221     0117                     _FVRCON	set	279
   222     0111                     _CM1CON0	set	273
   223     0118                     _DACCON0	set	280
   224     018C                     _ANSELA	set	396
   225     0197                     _VREGCON	set	407
   226     020C                     _WPUA	set	524
   227     0393                     _IOCAF	set	915
   228     0392                     _IOCAN	set	914
   229     0391                     _IOCAP	set	913
   230                           
   231                           	psect	cinit
   232     001E                     start_initialization:	
   233                           ; #config settings
   234                           
   235     001E                     __initialization:
   236                           
   237                           ; Clear objects allocated to COMMON
   238     001E  01F5               	clrf	__pbssCOMMON& (0+127)
   239     001F  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   240     0020                     end_of_initialization:	
   241                           ;End of C runtime variable initialization code
   242                           
   243     0020                     __end_of__initialization:
   244     0020  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   245     0021  0020               	movlb	0
   246     0022  2823               	ljmp	_main	;jump to C main() function
   247                           
   248                           	psect	bssCOMMON
   249     0075                     __pbssCOMMON:
   250     0075                     _state:
   251     0075                     	ds	2
   252                           
   253                           	psect	cstackCOMMON
   254     0070                     __pcstackCOMMON:
   255     0070                     ?_TIM2_Wait:
   256     0070                     ?_main:	
   257                           ; 1 bytes @ 0x0
   258                           
   259     0070                     ?_ISR:	
   260                           ; 1 bytes @ 0x0
   261                           
   262     0070                     ??_ISR:	
   263                           ; 1 bytes @ 0x0
   264                           
   265                           
   266                           ; 1 bytes @ 0x0
   267     0070                     	ds	1
   268     0071                     ??_TIM2_Wait:
   269                           
   270                           ; 1 bytes @ 0x1
   271     0071                     	ds	1
   272     0072                     TIM2_Wait@i:
   273                           
   274                           ; 2 bytes @ 0x2
   275     0072                     	ds	2
   276     0074                     ??_main:
   277                           
   278                           ; 1 bytes @ 0x4
   279     0074                     	ds	1
   280                           
   281                           	psect	maintext
   282     0023                     __pmaintext:	
   283 ;;
   284 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   285 ;;
   286 ;; *************** function _main *****************
   287 ;; Defined at:
   288 ;;		line 26 in file "main.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		wreg, status,2, status,0, pclath, cstack
   297 ;; Tracked objects:
   298 ;;		On entry : B1F/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   302 ;;      Params:         0       0       0       0
   303 ;;      Locals:         0       0       0       0
   304 ;;      Temps:          1       0       0       0
   305 ;;      Totals:         1       0       0       0
   306 ;;Total ram usage:        1 bytes
   307 ;; Hardware stack levels required when called: 2
   308 ;; This function calls:
   309 ;;		_TIM2_Wait
   310 ;; This function is called by:
   311 ;;		Startup code after reset
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315     0023                     _main:	
   316                           ;psect for function _main
   317                           
   318     0023                     l649:	
   319                           ;incstack = 0
   320                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   321                           
   322                           
   323                           ;main.c: 29: TIM2_Wait();
   324     0023  3180  206A  3180   	fcall	_TIM2_Wait
   325     0026                     l651:
   326                           
   327                           ;main.c: 31: DACCON0 = 0;
   328     0026  0022               	movlb	2	; select bank2
   329     0027  0198               	clrf	24	;volatile
   330     0028                     l653:
   331                           
   332                           ;main.c: 32: CM1CON0 = 0;
   333     0028  0191               	clrf	17	;volatile
   334     0029                     l655:
   335                           
   336                           ;main.c: 33: ADCON0 = 0;
   337     0029  0021               	movlb	1	; select bank1
   338     002A  019D               	clrf	29	;volatile
   339     002B                     l657:
   340                           
   341                           ;main.c: 34: FVRCON = 0;
   342     002B  0022               	movlb	2	; select bank2
   343     002C  0197               	clrf	23	;volatile
   344     002D                     l659:
   345                           
   346                           ;main.c: 35: VREGCON |= (1<<1);
   347     002D  0023               	movlb	3	; select bank3
   348     002E  1497               	bsf	23,1	;volatile
   349     002F                     l661:
   350                           
   351                           ;main.c: 36: OPTION_REG = 0x7f;
   352     002F  307F               	movlw	127
   353     0030  0021               	movlb	1	; select bank1
   354     0031  0095               	movwf	21	;volatile
   355     0032                     l663:
   356                           
   357                           ;main.c: 39: TRISA |= (1<<0);
   358     0032  140C               	bsf	12,0	;volatile
   359     0033                     l665:
   360                           
   361                           ;main.c: 40: ANSELA&=~(1<<0);
   362     0033  30FE               	movlw	254
   363     0034  00F4               	movwf	??_main
   364     0035  0874               	movf	??_main,w
   365     0036  0023               	movlb	3	; select bank3
   366     0037  058C               	andwf	12,f	;volatile
   367     0038                     l667:
   368                           
   369                           ;main.c: 41: WPUA |= (1<<0);
   370     0038  0024               	movlb	4	; select bank4
   371     0039  140C               	bsf	12,0	;volatile
   372     003A                     l669:
   373                           
   374                           ;main.c: 43: TRISA &=~ (1<<1)|(1<<2)|(1<<4)|(1<<5);
   375     003A  30FD               	movlw	253
   376     003B  00F4               	movwf	??_main
   377     003C  0874               	movf	??_main,w
   378     003D  0021               	movlb	1	; select bank1
   379     003E  058C               	andwf	12,f	;volatile
   380     003F                     l671:
   381                           
   382                           ;main.c: 44: ANSELA &=~ ((1<<1)|(1<<2)|(1<<4)|(1<<5));
   383     003F  30C9               	movlw	201
   384     0040  00F4               	movwf	??_main
   385     0041  0874               	movf	??_main,w
   386     0042  0023               	movlb	3	; select bank3
   387     0043  058C               	andwf	12,f	;volatile
   388     0044                     l673:
   389                           
   390                           ;main.c: 45: LATA |= (1<<1)|(1<<2)|(1<<4)|(1<<5);
   391     0044  3036               	movlw	54
   392     0045  00F4               	movwf	??_main
   393     0046  0874               	movf	??_main,w
   394     0047  0022               	movlb	2	; select bank2
   395     0048  048C               	iorwf	12,f	;volatile
   396     0049                     l675:
   397                           
   398                           ;main.c: 46: WPUA |= (1<<3);
   399     0049  0024               	movlb	4	; select bank4
   400     004A  158C               	bsf	12,3	;volatile
   401     004B                     l677:
   402                           
   403                           ;main.c: 49: IOCAP &=~(1<<0);
   404     004B  30FE               	movlw	254
   405     004C  00F4               	movwf	??_main
   406     004D  0874               	movf	??_main,w
   407     004E  0027               	movlb	7	; select bank7
   408     004F  0591               	andwf	17,f	;volatile
   409     0050                     l679:
   410                           
   411                           ;main.c: 50: IOCAN |= (1<<0);
   412     0050  1412               	bsf	18,0	;volatile
   413     0051                     l681:
   414                           
   415                           ;main.c: 51: INTCON |= (1<<3);
   416     0051  158B               	bsf	11,3	;volatile
   417     0052                     l683:
   418                           
   419                           ;main.c: 52: INTCON |= (1<<7);
   420     0052  178B               	bsf	11,7	;volatile
   421     0053                     l685:
   422                           
   423                           ;main.c: 53: IOCAF &=~(1<<0);
   424     0053  30FE               	movlw	254
   425     0054  00F4               	movwf	??_main
   426     0055  0874               	movf	??_main,w
   427     0056  0593               	andwf	19,f	;volatile
   428     0057                     l687:
   429                           
   430                           ;main.c: 54: INTCON &=~(1<<0);
   431     0057  30FE               	movlw	254
   432     0058  00F4               	movwf	??_main
   433     0059  0874               	movf	??_main,w
   434     005A  058B               	andwf	11,f	;volatile
   435     005B                     l689:
   436                           
   437                           ;main.c: 58: if(state == 1){
   438     005B  0375               	decf	_state,w	;volatile
   439     005C  0476               	iorwf	_state+1,w	;volatile
   440     005D  1D03               	btfss	3,2
   441     005E  2860               	goto	u31
   442     005F  2861               	goto	u30
   443     0060                     u31:
   444     0060  2867               	goto	l48
   445     0061                     u30:
   446     0061                     l691:
   447                           
   448                           ;main.c: 60: TIM2_Wait();
   449     0061  3180  206A  3180   	fcall	_TIM2_Wait
   450     0064                     l693:
   451                           
   452                           ;main.c: 61: state = 0;
   453     0064  01F5               	clrf	_state	;volatile
   454     0065  01F6               	clrf	_state+1	;volatile
   455                           
   456                           ;main.c: 62: }else{
   457     0066  285B               	goto	l689
   458     0067                     l48:
   459     0067  0063               	sleep	;# 
   460     0068  285B               	goto	l689
   461     0069  281D               	ljmp	start
   462     006A                     __end_of_main:
   463                           
   464                           	psect	text1
   465     006A                     __ptext1:	
   466 ;; *************** function _TIM2_Wait *****************
   467 ;; Defined at:
   468 ;;		line 16 in file "main.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;  i               2    2[COMMON] int 
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      void 
   475 ;; Registers used:
   476 ;;		wreg, status,2, status,0
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   482 ;;      Params:         0       0       0       0
   483 ;;      Locals:         2       0       0       0
   484 ;;      Temps:          1       0       0       0
   485 ;;      Totals:         3       0       0       0
   486 ;;Total ram usage:        3 bytes
   487 ;; Hardware stack levels used: 1
   488 ;; Hardware stack levels required when called: 1
   489 ;; This function calls:
   490 ;;		Nothing
   491 ;; This function is called by:
   492 ;;		_main
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496     006A                     _TIM2_Wait:	
   497                           ;psect for function _TIM2_Wait
   498                           
   499     006A                     l633:	
   500                           ;incstack = 0
   501                           ; Regs used in _TIM2_Wait: [wreg+status,2+status,0]
   502                           
   503                           
   504                           ;main.c: 17: T2CON=0x07;
   505     006A  3007               	movlw	7
   506     006B  0020               	movlb	0	; select bank0
   507     006C  009C               	movwf	28	;volatile
   508     006D                     l635:
   509                           
   510                           ;main.c: 18: for(int i=0; i<40; i++){
   511     006D  01F2               	clrf	TIM2_Wait@i
   512     006E  01F3               	clrf	TIM2_Wait@i+1
   513     006F                     l641:
   514                           
   515                           ;main.c: 19: TMR2=0;
   516     006F  0020               	movlb	0	; select bank0
   517     0070  019A               	clrf	26	;volatile
   518     0071                     l643:	
   519                           ;main.c: 20: while(TMR2<255);
   520                           
   521     0071  0A1A               	incf	26,w	;volatile
   522     0072  1D03               	btfss	3,2
   523     0073  2875               	goto	u11
   524     0074  2876               	goto	u10
   525     0075                     u11:
   526     0075  2871               	goto	l643
   527     0076                     u10:
   528     0076                     l645:
   529     0076  3001               	movlw	1
   530     0077  07F2               	addwf	TIM2_Wait@i,f
   531     0078  3000               	movlw	0
   532     0079  3DF3               	addwfc	TIM2_Wait@i+1,f
   533     007A  0873               	movf	TIM2_Wait@i+1,w
   534     007B  3A80               	xorlw	128
   535     007C  00F1               	movwf	??_TIM2_Wait
   536     007D  3080               	movlw	128
   537     007E  0271               	subwf	??_TIM2_Wait,w
   538     007F  1D03               	skipz
   539     0080  2883               	goto	u25
   540     0081  3028               	movlw	40
   541     0082  0272               	subwf	TIM2_Wait@i,w
   542     0083                     u25:
   543     0083  1C03               	skipc
   544     0084  2886               	goto	u21
   545     0085  2887               	goto	u20
   546     0086                     u21:
   547     0086  286F               	goto	l641
   548     0087                     u20:
   549     0087                     l647:
   550                           
   551                           ;main.c: 21: };main.c: 22: T2CON=0x00;
   552     0087  0020               	movlb	0	; select bank0
   553     0088  019C               	clrf	28	;volatile
   554     0089                     l42:
   555     0089  0008               	return
   556     008A                     __end_of_TIM2_Wait:
   557                           
   558                           	psect	intentry
   559     0004                     __pintentry:	
   560 ;; *************** function _ISR *****************
   561 ;; Defined at:
   562 ;;		line 72 in file "main.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;		None
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, status,2, status,0
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   576 ;;      Params:         0       0       0       0
   577 ;;      Locals:         0       0       0       0
   578 ;;      Temps:          1       0       0       0
   579 ;;      Totals:         1       0       0       0
   580 ;;Total ram usage:        1 bytes
   581 ;; Hardware stack levels used: 1
   582 ;; This function calls:
   583 ;;		Nothing
   584 ;; This function is called by:
   585 ;;		Interrupt level 1
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589     0004                     _ISR:
   590                           
   591                           ;incstack = 0
   592     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
   593                           
   594                           ; Regs used in _ISR: [wreg+status,2+status,0]
   595     0005  3180               	pagesel	$
   596     0006                     i1l695:
   597                           
   598                           ;main.c: 73: if( INTCON & (1<<0) ){
   599     0006  1C0B               	btfss	11,0	;volatile
   600     0007  2809               	goto	u4_21
   601     0008  280A               	goto	u4_20
   602     0009                     u4_21:
   603     0009  281B               	goto	i1l59
   604     000A                     u4_20:
   605     000A                     i1l697:
   606                           
   607                           ;main.c: 74: if( IOCAF & (1<<0) ){
   608     000A  0027               	movlb	7	; select bank7
   609     000B  1C13               	btfss	19,0	;volatile
   610     000C  280E               	goto	u5_21
   611     000D  280F               	goto	u5_20
   612     000E                     u5_21:
   613     000E  2817               	goto	i1l703
   614     000F                     u5_20:
   615     000F                     i1l699:
   616                           
   617                           ;main.c: 75: state = 1;
   618     000F  3001               	movlw	1
   619     0010  00F5               	movwf	_state	;volatile
   620     0011  3000               	movlw	0
   621     0012  00F6               	movwf	_state+1	;volatile
   622     0013                     i1l701:
   623                           
   624                           ;main.c: 76: IOCAF &=~(1<<0);
   625     0013  30FE               	movlw	254
   626     0014  00F0               	movwf	??_ISR
   627     0015  0870               	movf	??_ISR,w
   628     0016  0593               	andwf	19,f	;volatile
   629     0017                     i1l703:
   630                           
   631                           ;main.c: 77: };main.c: 78: INTCON &=~(1<<0);
   632     0017  30FE               	movlw	254
   633     0018  00F0               	movwf	??_ISR
   634     0019  0870               	movf	??_ISR,w
   635     001A  058B               	andwf	11,f	;volatile
   636     001B                     i1l59:
   637     001B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   638     001C  0009               	retfie
   639     001D                     __end_of_ISR:
   640     007E                     btemp	set	126	;btemp
   641     007E                     int$flags	set	126
   642     007E                     wtemp0	set	126
   643                           
   644                           	psect	config
   645                           
   646                           ;Config register CONFIG1 @ 0x8007
   647                           ;	
   648                           ;	FOSC = INTOSC, INTOSC oscillator; I/O function on CLKIN pin
   649                           ;	Watchdog Timer Enable
   650                           ;	WDTE = OFF, WDT disabled
   651                           ;	Power-up Timer Enable
   652                           ;	PWRTE = OFF, PWRT disabled
   653                           ;	MCLR Pin Function Select
   654                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   655                           ;	Flash Program Memory Code Protection
   656                           ;	CP = OFF, Program memory code protection is disabled
   657                           ;	Brown-out Reset Enable
   658                           ;	BOREN = OFF, Brown-out Reset disabled
   659                           ;	Clock Out Enable
   660                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   661     8007                     	org	32775
   662     8007  39E4               	dw	14820
   663                           
   664                           ;Config register CONFIG2 @ 0x8008
   665                           ;	Flash Memory Self-Write Protection
   666                           ;	WRT = OFF, Write protection off
   667                           ;	PLL Enable
   668                           ;	PLLEN = OFF, 4x PLL disabled
   669                           ;	Stack Overflow/Underflow Reset Enable
   670                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
   671                           ;	Brown-out Reset Voltage Selection
   672                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   673                           ;	Low Power Brown-out Reset enable bit
   674                           ;	LPBOREN = OFF, LPBOR is disabled
   675                           ;	Low-Voltage Programming Enable
   676                           ;	LVP = ON, Low-voltage programming enabled
   677     8008                     	org	32776
   678     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_TIM2_Wait

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      30
                                              4 COMMON     1     1      0
                          _TIM2_Wait
 ---------------------------------------------------------------------------------
 (1) _TIM2_Wait                                            3     3      0      30
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TIM2_Wait

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       7       2       50.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       7       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0       7      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon May 08 01:33:02 2023

                     l42 0089                       l48 0067                       u10 0076  
                     u11 0075                       u20 0087                       u21 0086  
                     u30 0061                       u31 0060                       u25 0083  
                    l641 006F                      l633 006A                      l643 0071  
                    l635 006D                      l651 0026                      l645 0076  
                    l661 002F                      l653 0028                      l647 0087  
                    l671 003F                      l663 0032                      l655 0029  
                    l681 0051                      l673 0044                      l665 0033  
                    l657 002B                      l649 0023                      l691 0061  
                    l683 0052                      l675 0049                      l667 0038  
                    l659 002D                      l693 0064                      l685 0053  
                    l677 004B                      l669 003A                      l687 0057  
                    l679 0050                      l689 005B                      _ISR 0004  
                   ?_ISR 0070                     _LATA 010C                     i1l59 001B  
                   _TMR2 001A                     _WPUA 020C                     u4_20 000A  
                   u4_21 0009                     u5_20 000F                     u5_21 000E  
                   _main 0023                     btemp 007E                     start 001D  
                  ??_ISR 0070                    ?_main 0070                    _T2CON 001C  
                  _IOCAF 0393                    _IOCAN 0392                    _IOCAP 0391  
                  i1l701 0013                    i1l703 0017                    i1l695 0006  
                  i1l697 000A                    i1l699 000F                    _TRISA 008C  
                  _state 0075                    status 0003                    wtemp0 007E  
        __initialization 001E             __end_of_main 006A                   ??_main 0074  
                 _ADCON0 009D                   _ANSELA 018C                   _INTCON 000B  
                 _FVRCON 0117        __end_of_TIM2_Wait 008A  __end_of__initialization 0020  
         __pcstackCOMMON 0070               __pmaintext 0023               __pintentry 0004  
                _DACCON0 0118                  _CM1CON0 0111                  _VREGCON 0197  
                __ptext1 006A     end_of_initialization 0020                _TIM2_Wait 006A  
             ?_TIM2_Wait 0070      start_initialization 001E              __end_of_ISR 001D  
            __pbssCOMMON 0075                ___latbits 0000               TIM2_Wait@i 0072  
            ??_TIM2_Wait 0071                 int$flags 007E                 intlevel1 0000  
             _OPTION_REG 0095  
